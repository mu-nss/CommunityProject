<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.member.mapper.MemberMapper">
	
	<select id="login" resultType="com.project.member.vo.LoginVO">
		select m.id, m.name, m.photo, m.gradeNo, g.gradeName
		from member m, grade g
		where (id = #{id} and pw = #{pw}) and m.gradeNo = g.gradeNo
	</select>
	
	<select id="idCheck" resultType="java.lang.String">
	 	select id from member where id = #{id}
	</select>
	
	<select id="list" resultType="com.project.member.vo.MemberVO">
<!-- 		<![CDATA[ -->
		select id, name, birth, gender, tel, email, status, gradeNo, gradeName
		from(
			select rownum rnum, id, name, birth, gender, tel, email, status, gradeNo, gradeName
			from(
				select m.id, m.name, m.birth, m.gender, m.tel, m.email, m.status, m.gradeNo, g.gradeName
				from member m, grade g
				where 1 = 1 
				<include refid="search" />
				and m.gradeNo = g.gradeNo
				order by id asc
			)
		) 
		where rnum between #{startRow} and #{endRow}
<!-- 		]]> -->
	</select>
	
	<select id="getTotalRow" resultType="Long">
		select count(*) from member
		where 1 = 1
		<include refid="search" />
	</select>
	
	<!-- 검색 -->
	<sql id="search">
		<if test="word != null and word != ''">
			and(
				<if test="key.indexOf('ine'.toString()) >= 0">
					id like ${"'%" + word + "%'"}
					or name like ${"'%" + word + "%'"}
					or email like ${"'%" + word + "%'"}
				</if>
				<if test="key.indexOf('i'.toString()) >= 0">
					or id like ${"'%" + word + "%'"}
				</if>
				<if test="key.indexOf('n'.toString()) >= 0">
					or name like ${"'%" + word + "%'"}
				</if>
				<if test="key.indexOf('e'.toString()) >= 0">
					or email like ${"'%" + word + "%'"}
				</if>
			)
		</if>
	</sql>

	<select id="view" resultType="com.project.member.vo.MemberVO">
		select m.id, m.name, m.birth, m.gender, m.tel, m.email, m.status, m.gradeNo, m.photo, g.gradeName, m.regDate, m.photo
		from member m, grade g
		where (id = #{id}) and (m.gradeNo = g.gradeNo)
	</select>

	<insert id="write">
		insert into member(id, pw, name, gender, birth, tel, email, photo)
		values(#{id}, #{pw}, #{name}, #{gender}, #{birth}, #{tel}, #{email}, #{photo})
	</insert>
	
	<update id="update">
		update member
		set id = #{id}, name = #{name}, tel = #{tel}, email = #{email}, photo = #{photo}
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from member
		where id = #{id}
	</delete>

	<!-- 상태 변경 -->
	<update id="chageStatus">
		update member
		set status = #{status}
		where id = #{id}
	</update>
	
	<!-- 등급 변경 -->
	<update id="changeGradeNo">
		update member set gradeNo = #{gradeNo}
		where id  = #{id}
	</update>
	
</mapper>